Roles de usuario:
Como usuario quiero poder registrarme en el sitio generando nombre de usuario/mail y contraseña. 
Al registrarse el usuario se loguea automáticamente. Este usuario no tiene privilegios de administración.
Como administrador del sitio, quiero poder asignar o quitar permisos de administración a cualquier usuario.
Como administrador del sitio, quiero poder eliminar usuarios.
Comentarios (todo por API REST):
Como usuario registrado, quiero poder postear comentarios en los ítems del sitio asignándoles un puntaje de 1 a 5. 
Cada ítem del sitio tendrá la posibilidad de recibir comentarios y puntuaciones solamente de usuarios logueados.
Como administrador del sitio, quiero poder borrar comentarios.



OPTATIVAS



Como administrador del sitio, quiero poder asociar una imagen a un ítem.
Las imágenes de los “ítems” se deben poder subir y eliminar desde el ABM de los mismos.

Como usuario quiero poder navegar los listados de ítems en forma paginada.
Se debe generar una paginación del lado del servidor para recorrer los listados en forma paginada. (Se recomienda empezar con “anterior” y “siguiente”)

Como usuario quiero poder realizar búsquedas avanzadas de los ítems.
Se debe incluir un formulario de búsquedas avanzadas donde se filtren los ítems dependiendo de los atributos internos. Esta búsqueda se debe resolver del lado del servidor.
Como usuario quiero poder ordenar los comentarios por antigüedad o puntaje, ascendente o descendente. (Via API REST)
	Se debe ordenar del lado del servidor.
Como usuario quiero poder filtrar los comentarios por cantidad de puntos.  (Via API REST)
	Se debe filtrar del lado del servidor.



COMENTARIOS


Todo el sistema de comentarios debe funcionar por medio de una API REST. Por ejemplo, cuando un usuario ingresa un comentario, el sitio no se debe recargar en su totalidad, solo el listado de comentarios.
Se debe renderizar todo lo relacionado a comentarios utilizando Client Side Render JS mediante la API REST.
Los comentarios se pueden ver siempre, pero sólo agregar por usuarios registrados y sólo borrar por administradores.
Los comentarios se deben poder crear. No es necesario poder modificarlos.


USUARIOS


Existirán al menos dos roles de usuarios registrados. (administradores y no-administradores)
Los usuarios registrados no son administradores (a menos que se les dé el permiso luego)



User Story sin implementar: -2/-4 (según complejidad de la story).
User Story que no anda: -2.
User Story con bug menor: -1.
Poca Prolijidad General (código difícil de leer, mala división de clases, pero respetando MVC): hasta -3.
Sin chequeo de entradas en el servidor (isset && != ""): -1
No respeta MVC: desaprobado.
PDO inseguro: desaprobado.
